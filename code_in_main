class Fraction:
    def __init__(self, numerator, denominator):
        self.numerator = numerator
        self.denominator = denominator

    def get_numerator(self):
        return self.numerator

    def get_denominator(self):
        return self.denominator

    def set_numerator(self, numerator):
        self.numerator = numerator

    def set_denominator(self, denominator):
        self.denominator = denominator

    def display(self):
        print(f'{self.numerator} / {self.denominator}')

    def fraction(self, a, b):
        if 0 < self.denominator:
            print(self.numerator / self.denominator)
        else:
            print("Ошибка")
    def add(self, result):
        new_numerator = self.numerator * result.denominator + self.denominator * result.numerator
        new_denominator = self.denominator * result.denominator
        return Fraction(new_numerator, new_denominator)

    def subtract(self, result):
        new_numerator = self.numerator * result.denominator - self.denomirator * result.numerator
        new_denominator = self.denominator * result.denominator
        return Fraction(new_numerator, new_denominator)

    def multiplication(self, result):
        new_numerator = self.numerator * result.numerator
        new_denomirator = self.denominator * result.denominator
        return Fraction(new_numerator, new_denomirator)

    def division(self, result):
        new_numerator = self.numerator * result.denominator
        new_denomirator = self.denominator * result.numerator
        return Fraction(new_numerator, new_denominator)

    class TemperatureConverter:
        @staticmethod
        def celsius_to_fahrenheit(celsius):
            return (celsius * 9 / 5) + 32

        @staticmethod
        def fahrenheit_to_celsius(fahrenheit):
            return (fahrenheit - 32) * 5 / 9

class MetricToEnglishConverter:
    @staticmethod
    def kilometers_to_miles(kilometers):
        return kilometers * 0.621371

    @staticmethod
    def miles_to_kilometers(miles):
        return miles * 1.60934

    @staticmethod
    def gallons_to_liters(gallons):
        return gallons * 3.78541

    @staticmethod
    def liters_to_gallons(liters):
        return liters * 0.264172

object1 = Fraction(4,8)
object2 = Fraction(1,2)
# print(object1.add(object2))
resulte = object1.add(object2)
print(resulte.display)
